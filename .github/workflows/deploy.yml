---
name: Deploy

on:
  push:
    branches:
      - master

jobs:
  tests:
    name: Execute Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"

  deploy:
    name: Deploy App
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Checkout and Copy Repo
        env:
          dest: '${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }}:/home/${{ secrets.USERNAME }}'
        run: |
          mkdir ../build
          rsync -av --progress \
          --exclude='.git' \ --exclude='.github' \
          --exclude='.vscode' \
           ./ ../build
          tar -cvf deploy.tar ../build/
          echo "${{ secrets.EC2_SSH_KE}}" > deploy_key
          chmod 600 ./deploy_key
          rsync -chrlvzi --delete \
            -e 'ssh -i ./deploy_key -p 22 -o StrictHostKeyChecking=no' \
            --include "deploy.tar" \
            --exclude '*'\
            ./ ${{env.dest}}

      

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Execute Build Commands For Deployed App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            tar -xvf ~/deploy.tar
            cd ~/todo_api
            chmod +x ./setups/setup_env.sh
            ./setups/setup_env.sh
            docker-compose -f ./docker-compose-build.yml build
            docker-compose -f ./docker-compose-build.yml up